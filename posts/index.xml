<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on üé® Blog de @carlogilmar</title><link>https://example.com/posts/</link><description>Recent content in Posts on üé® Blog de @carlogilmar</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 06 Sep 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://example.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Phoenix Live Views</title><link>https://example.com/posts/live_views/</link><pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate><guid>https://example.com/posts/live_views/</guid><description>The content below was generated for prepare a talk for the Elixir Meetup in CDMX üá≤üáΩ
All the drawings were drew my me.
The Phoenix Live Views is an open-source project created since last October, 2018. The core maintainers are Chris McCord, Jose Valim, Alex Garibay, Gary Rennie and Scott Newcomer. Join to the Elixir Community Slack!
In the next sections I&amp;rsquo;ll explain what is and how I understood that this works üòÖ.</description></item><item><title>Learning IoT: First Steps with Elixir</title><link>https://example.com/posts/learning-iot/</link><pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate><guid>https://example.com/posts/learning-iot/</guid><description>Recently I have the opportunity to give a conference in the Startup Week in Mexico City. So I decided talk about Internet of things, because I was learning this using an Arduino and a Raspberry Pi.
DEMO Connect Everything! The project is create a simple web application for create distribuid music. I was inspired in the Launchpad App and the Smartphone Symphony.
I planned make this using Phoenix Framework, and connect an Arduino for play the music.</description></item><item><title>Learning Swift</title><link>https://example.com/posts/learning-swift/</link><pubDate>Thu, 05 Jul 2018 00:00:00 +0000</pubDate><guid>https://example.com/posts/learning-swift/</guid><description>Learning Swift Recently I have been studying about Swift. I think that the learning experience is a wonderful resource for other persons who are in the same situation, so I consider valuable talk about this. First Steps When I start to learn swift I decide to watch videos and demonstrations about how to use the Xcode for build iOS apps, but, for be honest, I couldn‚Äôt understand some things: optionals, constrains, auto layout‚Ä¶ This was my first experience.</description></item><item><title>Ember 2018 Roadmap: A call for blog post</title><link>https://example.com/posts/ember-call/</link><pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate><guid>https://example.com/posts/ember-call/</guid><description>This blog post is a response to Ember‚Äôs 2018 Roadmap: A Call for Blog Posts Last November 2017 I had to build an application for make exams to evaluate teachers from a popular university. In the beginning this project was considered only for one person (me), so we decide learn Ember JS for this project.
The Beginning My previous experiences making front-end projects was using simple javascript and coffee script. I used to implement libraries as Handlebars, Director, Moment, SockJS, etc.</description></item><item><title>Learning Puppet</title><link>https://example.com/posts/learning-puppet/</link><pubDate>Mon, 07 May 2018 00:00:00 +0000</pubDate><guid>https://example.com/posts/learning-puppet/</guid><description>Learning Puppet Hi! Recently I was reviewing two courses about Jenkins, so I had to use Vagrant for configure my environment, also I used other tools as Puppet.
In the developer day is very common configure linux servers for a lot of things: install a Jenkins, prepare the deploy environments, etc‚Ä¶ Well, Puppet can help us to configure this servers, as a improve script shell. In this post I‚Äôm going to talk about the first steps for use Puppet.</description></item><item><title>Ember JS First Steps</title><link>https://example.com/posts/ember-first/</link><pubDate>Thu, 03 May 2018 00:00:00 +0000</pubDate><guid>https://example.com/posts/ember-first/</guid><description>In the last post Learning Ember I talk about how to start with Ember.
Now, after nights studying Ember I think that learning this framework is difficult because it require think first in Ember Concepts.
After nights studying Ember I can say that learning this framework is difficult because you have to think first in their main concepts, and if you have some experience with other frameworks or transpilers ( coffee script, typescript, elm) probably you will be confused.</description></item><item><title>PacktPub Review: Effective Jenkins</title><link>https://example.com/posts/effectivejenkins/</link><pubDate>Tue, 17 Apr 2018 00:00:00 +0000</pubDate><guid>https://example.com/posts/effectivejenkins/</guid><description>Recently, I reviewed a video course from Packt Publishing: ‚ÄúEffective Jenkins: Improving Quality in the Delivery Pipeline with Jenkins‚Äù
Thanks to Packt Publishing for this opportunity, and thanks to Dwayne D&amp;rsquo;Souza for the collaboration! So, I want to talk about the content of this course.
Before to Start This course is for people who know the basics about Jenkins. If you don‚Äôt, I would recommend learning about this from their previous courses:</description></item><item><title>Learning Ember JS</title><link>https://example.com/posts/learning-ember/</link><pubDate>Wed, 11 Apr 2018 00:00:00 +0000</pubDate><guid>https://example.com/posts/learning-ember/</guid><description>Follow with learning more about Ember Js as our JS framework, I have to talk about my learning experience.
When I was searching about Ember I found a lot of resources: posts, books, videos, courses and more. Everything looks good, until I had to start my first projects.
Before to start I think that is good to know the context about it. Ember JS was born as a fork from SproutCore Framework.</description></item><item><title>Process in Elixir: A Simple Example</title><link>https://example.com/posts/elixir-process/</link><pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate><guid>https://example.com/posts/elixir-process/</guid><description>In the last days I have been learning about Process in Elixir. After doing some exercises and understand some things about it, I can explain how to create a simple example about process.
The Process Work with process in Elixir is so common, so, it‚Äôs important know how to use it. For create a process you can use spawn (which takes a function).
The process structure is very simple: you have a mailbox, created within a function and by the word receive, and you can manage different messages and do something.</description></item><item><title>Phoenix Simple App using Web Sockets</title><link>https://example.com/posts/phoenix-sockets/</link><pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate><guid>https://example.com/posts/phoenix-sockets/</guid><description>Hi! This post is for explain how to create a simple application with Phoenix and Elixir using Web Sockets.
Web Sockets The Web Socket protocol based on TCP produce a bidirectional communication between client-server app, and it doesn‚Äôt need to use HTTP protocols.
I created a phoenix project without ecto mix phx.new sampler --no-ecto for show a simple connection using web sockets.
Create the two-way communication For start, we have to create the communication through the web socket.</description></item><item><title>Hello Ember Js</title><link>https://example.com/posts/emberjs/</link><pubDate>Thu, 15 Feb 2018 09:13:50 -0600</pubDate><guid>https://example.com/posts/emberjs/</guid><description>This is my first post in this year.
Recently we have to develop a project about teacher training for a private university in Mexico City.
There are a lot of javascript frameworks and transpilers: Angular JS, Vue JS, Meteor, Aurelia JS, React JS, Ionic JS, Typescript, CoffeeScript, Elm, etc. We decided learn and use Ember JS for develop our frontend, and Spring/Groovy for the backend.
About Ember Js Ember is a JavaScript front-end framework designed to help you build websites with rich and complex user interactions.</description></item><item><title>Fibonacci Sequence Review with Swift</title><link>https://example.com/posts/fibonacci/</link><pubDate>Wed, 29 Nov 2017 09:13:50 -0600</pubDate><guid>https://example.com/posts/fibonacci/</guid><description>Fibonacci Sequence With Swift 4.0 One of the firsts examples is the Fibonacci Sequence, although It‚Äôs a common programming problem, also It‚Äôs a curious problem for be solve with swift.
This is a sequence of numbers, which start in the third element as the sum of the previous two numbers. The next number is the sum of the previous two numbers too.
0, 1, (0+1), (1 + (0+1))
0, 1, 1, 2, 3, 5, 8, 13</description></item><item><title>First iOS App: Sending Messages to Slack</title><link>https://example.com/posts/first-ios-app/</link><pubDate>Fri, 29 Sep 2017 00:23:08 -0500</pubDate><guid>https://example.com/posts/first-ios-app/</guid><description>Hey! I have been learning how to program swift because I want to write iOS apps.
For the first, I considered start with recognize my previous concepts in this new language for me, here is my &amp;ldquo;fizzbuzz&amp;rdquo; example:
My guide to learn Swift and iOS are the follow videos and books:
Swift Mastering The Core Concepts Building iOS 10 Applications with Swift iOS Programming The Big Nerd Ranch Guide 6Th Edition My First App First, I need to understand this:</description></item><item><title>Develop with VertX</title><link>https://example.com/posts/vertx-basic/</link><pubDate>Tue, 25 Jul 2017 22:54:16 -0500</pubDate><guid>https://example.com/posts/vertx-basic/</guid><description>This was a post writted for Making Devs Blog. Recently we use the project Vertx for develop a project. Now I&amp;rsquo;m going to talk about the basic functionality.
VertX is a tool-kit for building reactive applications on the JVM.
It has many interesting features:
Actor model based. It&amp;rsquo;s polyglot: you can use with Java, Groovy, Ruby, Scala, Ceylon, Javascript, and Kotlin. Verticles For the beginning it&amp;rsquo;s important know that VertX has a nervous system called Event Bus, where you can write and run Verticles.</description></item><item><title>How to send Slack Messages with Groovy</title><link>https://example.com/posts/slack-webhook/</link><pubDate>Sun, 09 Oct 2016 14:04:47 -0500</pubDate><guid>https://example.com/posts/slack-webhook/</guid><description>Recently I have been searching projects for send messages to Slack Channel, and I found many purposes, but I had choose one, and I&amp;rsquo;ll show you how to use it. It&amp;rsquo;s very easy!
First, you have to go to your slack team, and click on &amp;ldquo;Apps &amp;amp; Integrations&amp;rdquo;.
Search and choose &amp;ldquo;Incoming WebHooks&amp;rdquo;.
Add Configuration: choose a channel, and Add Integration.
You will get a Webhook URL.</description></item><item><title>Connect Vertx with MongoDB using Groovy</title><link>https://example.com/posts/vertx_mongo_web/</link><pubDate>Sun, 09 Oct 2016 12:29:51 -0500</pubDate><guid>https://example.com/posts/vertx_mongo_web/</guid><description>Create a Simple Connection With Vertx, MongoDB and Groovy You have to install VertX 3.3.3, Groovy, and Mongo DB.
Create a simple groovy script
Include the next imports
import io.vertx.groovy.core.Vertx import io.vertx.groovy.ext.mongo.MongoClient Add the configuration for Mongo DB. def config = Vertx.currentContext().config() def uri = config.mongo_uri if (uri == null) { uri = &amp;quot;mongodb://localhost:27017&amp;quot; } def db = config.mongo_db if (db == null) { db = &amp;quot;test&amp;quot;//&amp;lt;---------------database name } def mongoconfig = [ connection_string:uri, db_name:db ] def mongoClient = MongoClient.</description></item><item><title>Agile Planet ScketchNotes Review</title><link>https://example.com/posts/agileplanet/</link><pubDate>Thu, 09 Jun 2016 08:53:18 -0600</pubDate><guid>https://example.com/posts/agileplanet/</guid><description>The idea of this Lean Book is to be a travel guide to Agile Methods, this publication is a resume of many interesting topics.
I think It&amp;rsquo;s very helpful to have a guide like this.
Every topic has a little resume, and a drawing like this:
I share with you my sketchnotes &amp;hellip;
¬°Visit LEAN PUB! You can find interesting books about agile topics&amp;hellip;</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog de Carlo Gilmar</title>
    <link>https://carlogilmar.github.io/tags/git/index.xml</link>
    <description>Recent content on Blog de Carlo Gilmar</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>@carlogilmar</copyright>
    <atom:link href="https://carlogilmar.github.io/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Git para Principiantes</title>
      <link>https://carlogilmar.github.io/portfolio/git_para_principiantes/</link>
      <pubDate>Mon, 26 Sep 2016 21:22:27 -0500</pubDate>
      
      <guid>https://carlogilmar.github.io/portfolio/git_para_principiantes/</guid>
      <description>

&lt;hr /&gt;

&lt;h1 id=&#34;para-iniciar&#34;&gt;Para iniciar&amp;hellip;&lt;/h1&gt;

&lt;p&gt;Recientemente he descubierto el gran y amplio mundo que implica el uso de la herramienta Git para proyectos de software.&lt;/p&gt;

&lt;p&gt;Aún buscando entre tutoriales, y libros, el primer acercamiento es algo similar a lanzarse a un mar sin saber nadar, por ello mismo lo primero que hice fue hacer uso de la Facilitación Gráfica para poder contar con una historia que era Git y cómo funcionaba. Aquí va la primera entrega de lo que espero sean muchas.&lt;/p&gt;

&lt;p&gt;Este querido amigo nos servirá para monitorear los archivos de un proyecto, y así controlar las versiones y avances.&lt;/p&gt;

&lt;p&gt;Les presento al R2D2-Git y las funciones básicas para tenerlo funcionando en un proyecto.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://carlogilmar.github.io/uno.jpg&#34; alt=&#34;Hola Git&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Git se ejecuta dentro de la carpeta principal de nuestro proyecto y reconoce TODO lo qué hay dentro.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://carlogilmar.github.io/dos.jpg&#34; alt=&#34;Git init&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Entonces, a partir de ese momento ya no estarás solo en el desarrollo del proyecto, porque Git estará para apoyarte.&lt;/p&gt;

&lt;p&gt;Git verá todos los archivos, pero es necesario indicarle los archivos que deseamos versionar.&lt;/p&gt;

&lt;p&gt;Veamos como ir usando Git poco a poco.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;estado-de-los-archivos-que-monitorea-git&#34;&gt;ESTADO DE LOS ARCHIVOS QUE MONITOREA GIT&lt;/h1&gt;

&lt;p&gt;Primero debemos preguntarle qué ve en nuestro proyecto el pequeño amigo Git, el hablara con la verdad y dirá cada archivo qué hay que no este monitoreando.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://carlogilmar.github.io/tres.jpg&#34; alt=&#34;Status&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;dile-a-git-donde-poner-el-ojo&#34;&gt;DILE A GIT DONDE PONER EL OJO&lt;/h1&gt;

&lt;p&gt;Una vez que sabemos el estado de aquello que no está monitoreando, podemos indicarle a Git qué archivo debe monitorear, podemos iniciar por uno.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://carlogilmar.github.io/cuatro.jpg&#34; alt=&#34;Add&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Si volvemos a pedirle el STATUS, verás que ya no cuenta el archivo agregado.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;al-confesionario-con-git&#34;&gt;AL CONFESIONARIO CON GIT&lt;/h1&gt;

&lt;p&gt;Una vez que Git ya está monitoreando el archivo, habrá que indicarle una descripción corta de qué es el archivo, qué se modificó, etc.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://carlogilmar.github.io/cinco.jpg&#34; alt=&#34;Commit&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;repetir&#34;&gt;REPETIR&lt;/h1&gt;

&lt;p&gt;Si agregamos un archivo (ADD) dentro del proyecto, y le damos un COMMIT, entonces estará siendo monitoreado por Git. Es necesario ir agregando cada archivo a Git mediante el ADD-COMMIT.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://carlogilmar.github.io/siete.jpg&#34; alt=&#34;Rutine&#34; /&gt;
&lt;img src=&#34;https://carlogilmar.github.io/ocho.jpg&#34; alt=&#34;Rutine 2&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Una vez que el STATUS no muestre ningún archivo, tendremos nuestro proyecto versionado bajo la mirada y el monitor de Git.&lt;/p&gt;

&lt;p&gt;Si modificaramos un archivo, automáticamente el STATUS mostrará que hubo un cambio e indicará el archivo, de igual forma lo hará si se añaden nuevos archivos al proyecto.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://carlogilmar.github.io/seis.jpg&#34; alt=&#34;Diff&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Es posible identificar las diferencias existentes en un archivo, bastará con indicarle a git.&lt;/p&gt;

&lt;p&gt;Y finalmente aplicaremos el ADD y COMMIT para monitorearlo por Git.&lt;/p&gt;

&lt;p&gt;Notarán que Git irá diciendo que está funcionando sobre algo llamado &amp;ldquo;Master&amp;rdquo;, que es la rama principal, y creada por defecto, que será tema para otra entrega.&lt;/p&gt;

&lt;h1 id=&#34;review&#34;&gt;Review&lt;/h1&gt;

&lt;p&gt;Comandos de esta publicación de Git&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git init //Para iniciar Git en tu proyecto

git status //Para ver los archivos no monitoreados

git add file.sm //Indicarle a git que contemple un archivo

git commit -m &amp;quot;Descripcion&amp;quot; //Indicarle una descripcion del archivo agregado anteriormente

git diff file.sm //Git te mostrará las modificaciones

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
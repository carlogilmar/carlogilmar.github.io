<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>programming on ðŸŽ¨ Blog de @carlogilmar</title><link>https://example.com/tags/programming/</link><description>Recent content in programming on ðŸŽ¨ Blog de @carlogilmar</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 30 Mar 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://example.com/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Phoenix Simple App using Web Sockets</title><link>https://example.com/posts/phoenix-sockets/</link><pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate><guid>https://example.com/posts/phoenix-sockets/</guid><description>Hi! This post is for explain how to create a simple application with Phoenix and Elixir using Web Sockets.
Web Sockets The Web Socket protocol based on TCP produce a bidirectional communication between client-server app, and it doesnâ€™t need to use HTTP protocols.
I created a phoenix project without ecto mix phx.new sampler --no-ecto for show a simple connection using web sockets.
Create the two-way communication For start, we have to create the communication through the web socket.</description></item><item><title>Fibonacci Sequence Review with Swift</title><link>https://example.com/posts/fibonacci/</link><pubDate>Wed, 29 Nov 2017 09:13:50 -0600</pubDate><guid>https://example.com/posts/fibonacci/</guid><description>Fibonacci Sequence With Swift 4.0 One of the firsts examples is the Fibonacci Sequence, although Itâ€™s a common programming problem, also Itâ€™s a curious problem for be solve with swift.
This is a sequence of numbers, which start in the third element as the sum of the previous two numbers. The next number is the sum of the previous two numbers too.
0, 1, (0+1), (1 + (0+1))
0, 1, 1, 2, 3, 5, 8, 13</description></item><item><title>First iOS App: Sending Messages to Slack</title><link>https://example.com/posts/first-ios-app/</link><pubDate>Fri, 29 Sep 2017 00:23:08 -0500</pubDate><guid>https://example.com/posts/first-ios-app/</guid><description>Hey! I have been learning how to program swift because I want to write iOS apps.
For the first, I considered start with recognize my previous concepts in this new language for me, here is my &amp;ldquo;fizzbuzz&amp;rdquo; example:
My guide to learn Swift and iOS are the follow videos and books:
Swift Mastering The Core Concepts Building iOS 10 Applications with Swift iOS Programming The Big Nerd Ranch Guide 6Th Edition My First App First, I need to understand this:</description></item><item><title>How to send Slack Messages with Groovy</title><link>https://example.com/posts/slack-webhook/</link><pubDate>Sun, 09 Oct 2016 14:04:47 -0500</pubDate><guid>https://example.com/posts/slack-webhook/</guid><description>Recently I have been searching projects for send messages to Slack Channel, and I found many purposes, but I had choose one, and I&amp;rsquo;ll show you how to use it. It&amp;rsquo;s very easy!
First, you have to go to your slack team, and click on &amp;ldquo;Apps &amp;amp; Integrations&amp;rdquo;.
Search and choose &amp;ldquo;Incoming WebHooks&amp;rdquo;.
Add Configuration: choose a channel, and Add Integration.
You will get a Webhook URL.</description></item><item><title>Connect Vertx with MongoDB using Groovy</title><link>https://example.com/posts/vertx_mongo_web/</link><pubDate>Sun, 09 Oct 2016 12:29:51 -0500</pubDate><guid>https://example.com/posts/vertx_mongo_web/</guid><description>Create a Simple Connection With Vertx, MongoDB and Groovy You have to install VertX 3.3.3, Groovy, and Mongo DB.
Create a simple groovy script
Include the next imports
import io.vertx.groovy.core.Vertx import io.vertx.groovy.ext.mongo.MongoClient Add the configuration for Mongo DB. def config = Vertx.currentContext().config() def uri = config.mongo_uri if (uri == null) { uri = &amp;quot;mongodb://localhost:27017&amp;quot; } def db = config.mongo_db if (db == null) { db = &amp;quot;test&amp;quot;//&amp;lt;---------------database name } def mongoconfig = [ connection_string:uri, db_name:db ] def mongoClient = MongoClient.</description></item></channel></rss>